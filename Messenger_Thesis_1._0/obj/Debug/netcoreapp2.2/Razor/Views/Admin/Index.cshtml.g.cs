#pragma checksum "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ee9f749755f2cb003722281222e4dd0886e1a2f4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Index), @"mvc.1.0.view", @"/Views/Admin/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Admin/Index.cshtml", typeof(AspNetCore.Views_Admin_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\_ViewImports.cshtml"
using Messenger_Thesis_1._0;

#line default
#line hidden
#line 2 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\_ViewImports.cshtml"
using Messenger_Thesis_1._0.Data;

#line default
#line hidden
#line 3 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\_ViewImports.cshtml"
using Messenger_Thesis_1._0.Models;

#line default
#line hidden
#line 4 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\_ViewImports.cshtml"
using Messenger_Thesis_1._0.Data.Model;

#line default
#line hidden
#line 2 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
using Messenger_Thesis_1._0.Data.Model.Interface;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ee9f749755f2cb003722281222e4dd0886e1a2f4", @"/Views/Admin/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8a1613ad8cef49c5d71bf9b40e5516928b4fbff4", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DashboardViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/plugins/bootstrap/dist/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/plugins/chart.js/dist/Chart.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/plugins/chart.js/dist/Chart.extension.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/plugins/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
  

    Layout = "_Admin";
    ViewData["Title"] = "Admin Page";

#line default
#line hidden
            BeginContext(190, 3066, true);
            WriteLiteral(@"
<div class=""container-fluid mt--7"">
    <div class=""row"">
        <div class=""col-xl-8 mb-5 mb-xl-0"">
            <div class=""card bg-gradient-default shadow"">
                <div class=""card-header bg-transparent"">
                    <div class=""row align-items-center"">
                        <div class=""col"">
                            <h6 class=""text-uppercase text-light ls-1 mb-1"">Overview</h6>
                            <h2 class=""text-white mb-0"">Sales Value</h2>
                        </div>
                        <div class=""col"">
                            <ul class=""nav nav-pills justify-content-end"">
                            </ul>
                        </div>
                    </div>
                </div>
                <div class=""card-body"">
                    <!-- Chart -->
                    <div class=""chart"">
                        <!-- Chart wrapper -->
                        <canvas id=""chart-sales"" class=""chart-canvas""></canvas>
                 ");
            WriteLiteral(@"   </div>
                </div>
            </div>
        </div>
        <div class=""col-xl-4"">
            <div class=""card shadow"">
                <div class=""card-header bg-transparent"">
                    <div class=""row align-items-center"">
                        <div class=""col"">
                            <h6 class=""text-uppercase text-muted ls-1 mb-1"">Performance</h6>
                            <h2 class=""mb-0"">Total orders</h2>
                        </div>
                    </div>
                </div>
                <div class=""card-body"">
                    <!-- Chart -->
                    <div class=""chart"">
                        <canvas id=""chart-new-order"" class=""chart-canvas""></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <style>

        #testing_natin {
            background-color:red;
        }


    </style>

    <div  class=""row mt-5"">
        <div  class=""col-xl-8 mb-5 mb-xl-0");
            WriteLiteral(@""">
            <div  class=""card shadow"">
                <div class=""card-header border-0"">
                    <div class=""row align-items-center"">
                        <div class=""col"">
                            <h3 class=""mb-0"">New Projects</h3>
                        </div>

                    </div>
                </div>
                <div class=""table-responsive"">
                    <!-- Projects table -->
                    <table class=""table align-items-center table-flush"">
                        <thead class=""thead-light"">
                            <tr>
                                <th scope=""col"">Company Name</th>
                                <th scope=""col"">Client Name</th>
                                <th scope=""col"">Quantity</th>
                                <th scope=""col"">Price</th>
                                <th scope=""col"">Area</th>
                            </tr>
                        </thead>
                        <tbody>
");
            EndContext();
#line 87 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                              

                                foreach (var z in Model.Projects)
                                {



#line default
#line hidden
            BeginContext(3396, 144, true);
            WriteLiteral("                                    <tr>\r\n                                        <th scope=\"row\">\r\n                                            ");
            EndContext();
            BeginContext(3541, 13, false);
#line 95 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.ProjectName);

#line default
#line hidden
            EndContext();
            BeginContext(3554, 139, true);
            WriteLiteral("\r\n                                        </th>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(3694, 12, false);
#line 98 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.ClientName);

#line default
#line hidden
            EndContext();
            BeginContext(3706, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(3846, 10, false);
#line 101 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Quantity);

#line default
#line hidden
            EndContext();
            BeginContext(3856, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(3996, 7, false);
#line 104 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Price);

#line default
#line hidden
            EndContext();
            BeginContext(4003, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(4143, 6, false);
#line 107 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Area);

#line default
#line hidden
            EndContext();
            BeginContext(4149, 92, true);
            WriteLiteral("\r\n                                        </td>\r\n                                    </tr>\r\n");
            EndContext();
#line 110 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"


                                }
                            

#line default
#line hidden
            BeginContext(4311, 1057, true);
            WriteLiteral(@"
                        </tbody>
                    </table>
                </div>
            </div>
        </div>



        <div class=""col-xl-4"">
            <div class=""card shadow"">
                <div class=""card-header border-0"">
                    <div class=""row align-items-center"">
                        <div class=""col"">
                            <h3 class=""mb-0"">Social traffic</h3>
                        </div>

                    </div>
                </div>
                <div class=""table-responsive"">
                    <!-- Projects table -->
                    <table class=""table align-items-center table-flush"">
                        <thead class=""thead-light"">
                            <tr>
                                <th scope=""col"">Company Name</th>
                                <th scope=""col"">Full Name</th>
                                <th scope=""col"">Email</th>
                            </tr>
                        </thead>
  ");
            WriteLiteral("                      <tbody>\r\n\r\n");
            EndContext();
#line 145 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                              
                                foreach (var x in Model.Users)
                                {

#line default
#line hidden
            BeginContext(5499, 148, true);
            WriteLiteral("                                    <tr>\r\n\r\n\r\n                                        <th scope=\"row\">\r\n                                            ");
            EndContext();
            BeginContext(5648, 13, false);
#line 152 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(x.CompanyName);

#line default
#line hidden
            EndContext();
            BeginContext(5661, 139, true);
            WriteLiteral("\r\n                                        </th>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(5801, 11, false);
#line 155 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(x.FirstName);

#line default
#line hidden
            EndContext();
            BeginContext(5812, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(5814, 10, false);
#line 155 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                    Write(x.LastName);

#line default
#line hidden
            EndContext();
            BeginContext(5824, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(5964, 7, false);
#line 158 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(x.Email);

#line default
#line hidden
            EndContext();
            BeginContext(5971, 94, true);
            WriteLiteral("\r\n                                        </td>\r\n\r\n                                    </tr>\r\n");
            EndContext();
#line 162 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                }


                            

#line default
#line hidden
            BeginContext(6135, 1304, true);
            WriteLiteral(@"





                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>


    <div class=""row mt-5"">
        <div class=""col-xl-8 mb-5 mb-xl-0"">
            <div class=""card shadow"">
                <div class=""card-header border-0"">
                    <div class=""row align-items-center"">
                        <div class=""col"">
                            <h3 class=""mb-0"">Ratings</h3>
                        </div>

                    </div>
                </div>
                <div class=""table-responsive"">
                    <!-- Projects table -->
                    <table class=""table align-items-center table-flush"">
                        <thead class=""thead-light"">
                            <tr>
                                <th scope=""col"">Full Name</th>
                                <th scope=""col"">Promptness</th>
                                <th scope=""col"">Quality</th>
                 ");
            WriteLiteral(@"               <th scope=""col"">Responsiveness</th>
                                <th scope=""col"">Behaviour</th>
                                <th scope=""col"">Overall</th>
                            </tr>
                        </thead>
                        <tbody>
");
            EndContext();
#line 205 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                              

                                foreach (var z in Model.Feedbacks)
                                {

#line default
#line hidden
            BeginContext(7576, 100, true);
            WriteLiteral("                                    <tr>\r\n                                        <th scope=\"row\">\r\n");
            EndContext();
#line 211 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                              
                                                if (z.Promptness != 0 && z.Quality == 0)
                                                {
                                                    

#line default
#line hidden
            BeginContext(7918, 57, false);
#line 214 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                               Write(UserRepository.FindUser(a => a.Email == z.Name).FirstName);

#line default
#line hidden
            EndContext();
            BeginContext(7977, 58, false);
#line 214 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                                                                          Write(UserRepository.FindUser(a => a.Email == z.Name).MiddleName);

#line default
#line hidden
            EndContext();
            BeginContext(8090, 56, false);
#line 215 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                               Write(UserRepository.FindUser(a => a.Email == z.Name).LastName);

#line default
#line hidden
            EndContext();
#line 215 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                                                                             
                                                }else
                                                {
                                                    

#line default
#line hidden
            BeginContext(8307, 6, false);
#line 218 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                               Write(z.Name);

#line default
#line hidden
            EndContext();
#line 218 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                           
                                                }
                                            

#line default
#line hidden
            BeginContext(8413, 139, true);
            WriteLiteral("\r\n                                        </th>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(8553, 12, false);
#line 224 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Promptness);

#line default
#line hidden
            EndContext();
            BeginContext(8565, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(8705, 9, false);
#line 227 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Quality);

#line default
#line hidden
            EndContext();
            BeginContext(8714, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(8854, 16, false);
#line 230 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Responsiveness);

#line default
#line hidden
            EndContext();
            BeginContext(8870, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(9010, 11, false);
#line 233 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Behaviour);

#line default
#line hidden
            EndContext();
            BeginContext(9021, 139, true);
            WriteLiteral("\r\n                                        </td>\r\n                                        <td>\r\n                                            ");
            EndContext();
            BeginContext(9161, 9, false);
#line 236 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                       Write(z.Overall);

#line default
#line hidden
            EndContext();
            BeginContext(9170, 92, true);
            WriteLiteral("\r\n                                        </td>\r\n                                    </tr>\r\n");
            EndContext();
#line 239 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"


                                }
                            

#line default
#line hidden
            BeginContext(9332, 853, true);
            WriteLiteral(@"


                        </tbody>
                    </table>
                </div>







            </div>
        </div>

        <div class=""col-xl-4"">
            <div class=""card shadow"">
                <div class=""card-header border-0"">
                    <div class=""row align-items-center"">
                        <div class=""col"">
                            <h3 class=""mb-0"">Rating</h3>
                        </div>

                    </div>
                </div>
                <div class=""card-body"">
                    <!-- Chart -->
                    <div class=""chart"">
                        <canvas id=""chart-rate"" class=""chart-canvas""></canvas>
                    </div>
                </div>
            </div>
        </div>




    </div>
    <!-- Footer -->

</div>

");
            EndContext();
            BeginContext(10185, 85, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ee9f749755f2cb003722281222e4dd0886e1a2f424053", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10270, 28, true);
            WriteLiteral("\r\n<!--   Optional JS   -->\r\n");
            EndContext();
            BeginContext(10298, 70, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ee9f749755f2cb003722281222e4dd0886e1a2f425264", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10368, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(10370, 76, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ee9f749755f2cb003722281222e4dd0886e1a2f426446", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10446, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(10448, 69, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ee9f749755f2cb003722281222e4dd0886e1a2f427628", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10517, 20237, true);
            WriteLiteral(@"
<script>

    var map, lat, lng, Datepicker = function () {
        var a = $("".datepicker"");
        a.length && a.each(function () {
            $(this).datepicker({
                disableTouchKeyboard: !0,
                autoclose: !1
            })
        })
    }(),
        CopyIcon = function () {
            var a, e = "".btn-icon-clipboard"",
                t = $(e);
            t.length && ((a = t).tooltip().on(""mouseleave"", function () {
                a.tooltip(""hide"")
            }), new ClipboardJS(e).on(""success"", function (a) {
                $(a.trigger).attr(""title"", ""Copied!"").tooltip(""_fixTitle"").tooltip(""show"").attr(""title"", ""Copy to clipboard"").tooltip(""_fixTitle""), a.clearSelection()
            }))
        }(),
        FormControl = function () {
            var a = $("".form-control"");
            a.length && a.on(""focus blur"", function (a) {
                $(this).parents("".form-group"").toggleClass(""focused"", ""focus"" === a.type || 0 < this.value.length)
 ");
            WriteLiteral(@"           }).trigger(""blur"")
        }(),
        $map = $(""#map-canvas""),
        color = ""#5e72e4"";

    function initMap() {
        map = document.getElementById(""map-canvas""), lat = map.getAttribute(""data-lat""), lng = map.getAttribute(""data-lng"");
        var a = new google.maps.LatLng(lat, lng),
            e = {
                zoom: 12,
                scrollwheel: !1,
                center: a,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                styles: [{
                    featureType: ""administrative"",
                    elementType: ""labels.text.fill"",
                    stylers: [{
                        color: ""#444444""
                    }]
                }, {
                    featureType: ""landscape"",
                    elementType: ""all"",
                    stylers: [{
                        color: ""#f2f2f2""
                    }]
                }, {
                    featureType: ""poi"",
                    elementType: ""all"",");
            WriteLiteral(@"
                    stylers: [{
                        visibility: ""off""
                    }]
                }, {
                    featureType: ""road"",
                    elementType: ""all"",
                    stylers: [{
                        saturation: -100
                    }, {
                        lightness: 45
                    }]
                }, {
                    featureType: ""road.highway"",
                    elementType: ""all"",
                    stylers: [{
                        visibility: ""simplified""
                    }]
                }, {
                    featureType: ""road.arterial"",
                    elementType: ""labels.icon"",
                    stylers: [{
                        visibility: ""off""
                    }]
                }, {
                    featureType: ""transit"",
                    elementType: ""all"",
                    stylers: [{
                        visibility: ""off""
                    }]
    ");
            WriteLiteral(@"            }, {
                    featureType: ""water"",
                    elementType: ""all"",
                    stylers: [{
                        color: color
                    }, {
                        visibility: ""on""
                    }]
                }]
            };
        map = new google.maps.Map(map, e);
        var t = new google.maps.Marker({
            position: a,
            map: map,
            animation: google.maps.Animation.DROP,
            title: ""Hello World!""
        }),
            o = new google.maps.InfoWindow({
                content: '<div class=""info-window-content""><h2>Argon Dashboard</h2><p>A beautiful Dashboard for Bootstrap 4. It is Free and Open Source.</p></div>'
            });
        google.maps.event.addListener(t, ""click"", function () {
            o.open(map, t)
        })
    }
    $map.length && google.maps.event.addDomListener(window, ""load"", initMap);
    var Navbar = function () {
        var e = $("".navbar-nav, .navb");
            WriteLiteral(@"ar-nav .nav""),
            t = $("".navbar .collapse""),
            a = $("".navbar .dropdown"");
        t.on({
            ""show.bs.collapse"": function () {
                var a;
                (a = $(this)).closest(e).find(t).not(a).collapse(""hide"")
            }
        }), a.on({
            ""hide.bs.dropdown"": function () {
                var a, e;
                a = $(this), (e = a.find("".dropdown-menu"")).addClass(""close""), setTimeout(function () {
                    e.removeClass(""close"")
                }, 200)
            }
        })
    }(),
        NavbarCollapse = function () {
            $("".navbar-nav"");
            var a = $("".navbar .collapse"");
            a.length && (a.on({
                ""hide.bs.collapse"": function () {
                    a.addClass(""collapsing-out"")
                }
            }), a.on({
                ""hidden.bs.collapse"": function () {
                    a.removeClass(""collapsing-out"")
                }
            }))
        }(");
            WriteLiteral(@"),
        noUiSlider = function () {
            if ($("".input-slider-container"")[0] && $("".input-slider-container"").each(function () {
                var a = $(this).find("".input-slider""),
                    e = a.attr(""id""),
                    t = a.data(""range-value-min""),
                    o = a.data(""range-value-max""),
                    n = $(this).find("".range-slider-value""),
                    r = n.attr(""id""),
                    l = n.data(""range-value-low""),
                    i = document.getElementById(e),
                    s = document.getElementById(r);
                noUiSlider.create(i, {
                    start: [parseInt(l)],
                    connect: [!0, !1],
                    range: {
                        min: [parseInt(t)],
                        max: [parseInt(o)]
                    }
                }), i.noUiSlider.on(""update"", function (a, e) {
                    s.textContent = a[e]
                })
            }), $(""#input-slider-r");
            WriteLiteral(@"ange"")[0]) {
                var a = document.getElementById(""input-slider-range""),
                    e = document.getElementById(""input-slider-range-value-low""),
                    t = document.getElementById(""input-slider-range-value-high""),
                    o = [e, t];
                noUiSlider.create(a, {
                    start: [parseInt(e.getAttribute(""data-range-value-low"")), parseInt(t.getAttribute(""data-range-value-high""))],
                    connect: !0,
                    range: {
                        min: parseInt(a.getAttribute(""data-range-value-min"")),
                        max: parseInt(a.getAttribute(""data-range-value-max""))
                    }
                }), a.noUiSlider.on(""update"", function (a, e) {
                    o[e].textContent = a[e]
                })
            }
        }(),
        Popover = function () {
            var a = $('[data-toggle=""popover""]'),
                t = """";
            a.length && a.each(function () {
         ");
            WriteLiteral(@"       ! function (a) {
                    a.data(""color"") && (t = ""popover-"" + a.data(""color""));
                    var e = {
                        trigger: ""focus"",
                        template: '<div class=""popover ' + t + '"" role=""tooltip""><div class=""arrow""></div><h3 class=""popover-header""></h3><div class=""popover-body""></div></div>'
                    };
                    a.popover(e)
                }($(this))
            })
        }(),
        ScrollTo = function () {
            var a = $("".scroll-me, [data-scroll-to], .toc-entry a"");
            a.length && a.on(""click"", function (a) {
                var e, t, o, n;
                e = $(this), t = e.attr(""href""), o = e.data(""scroll-to-offset"") ? e.data(""scroll-to-offset"") : 0, n = {
                    scrollTop: $(t).offset().top - o
                }, $(""html, body"").stop(!0, !0).animate(n, 600), event.preventDefault()
            })
        }(),
        Tooltip = function () {
            var a = $('[data-toggle=");
            WriteLiteral(@"""tooltip""]');
            a.length && a.tooltip()
        }(),
        Charts = function () {
            var a, e = $('[data-toggle=""chart""]'),
                t = ""light"",
                o = {
                    base: ""Open Sans""
                },
                n = {
                    gray: {
                        100: ""#f6f9fc"",
                        200: ""#e9ecef"",
                        300: ""#dee2e6"",
                        400: ""#ced4da"",
                        500: ""#adb5bd"",
                        600: ""#8898aa"",
                        700: ""#525f7f"",
                        800: ""#32325d"",
                        900: ""#212529""
                    },
                    theme: {
                        default: ""#172b4d"",
                        primary: ""#5e72e4"",
                        secondary: ""#f4f5f7"",
                        info: ""#11cdef"",
                        success: ""#2dce89"",
                        danger: ""#f5365c"",
                    ");
            WriteLiteral(@"    warning: ""#fb6340""
                    },
                    black: ""#12263F"",
                    white: ""#FFFFFF"",
                    transparent: ""transparent""
                };

            function r(a, e) {
                for (var t in e) ""object"" != typeof e[t] ? a[t] = e[t] : r(a[t], e[t])
            }

            function l(a) {
                var e = a.data(""add""),
                    t = $(a.data(""target"")).data(""chart"");
                a.is("":checked"") ? function a(e, t) {
                    for (var o in t) Array.isArray(t[o]) ? t[o].forEach(function (a) {
                        e[o].push(a)
                    }) : a(e[o], t[o])
                }(t, e) : function a(e, t) {
                    for (var o in t) Array.isArray(t[o]) ? t[o].forEach(function (a) {
                        e[o].pop()
                    }) : a(e[o], t[o])
                }(t, e), t.update()
            }

            function i(a) {
                var e = a.data(""update""),
     ");
            WriteLiteral(@"               t = $(a.data(""target"")).data(""chart"");
                r(t, e),
                    function (a, e) {
                        if (void 0 !== a.data(""prefix"") || void 0 !== a.data(""prefix"")) {
                            var r = a.data(""prefix"") ? a.data(""prefix"") : """",
                                l = a.data(""suffix"") ? a.data(""suffix"") : """";
                            e.options.scales.yAxes[0].ticks.callback = function (a) {
                                if (!(a % 10)) return r + a + l
                            }, e.options.tooltips.callbacks.label = function (a, e) {
                                var t = e.datasets[a.datasetIndex].label || """",
                                    o = a.yLabel,
                                    n = """";
                                return 1 < e.datasets.length && (n += '<span class=""popover-body-label mr-auto"">' + t + ""</span>""), n += '<span class=""popover-body-value"">' + r + o + l + ""</span>""
                            }
          ");
            WriteLiteral(@"              }
                    }(a, t), t.update()
            }
            return window.Chart && r(Chart, (a = {
                defaults: {
                    global: {
                        responsive: !0,
                        maintainAspectRatio: !1,
                        defaultColor: n.gray[600],
                        defaultFontColor: n.gray[600],
                        defaultFontFamily: o.base,
                        defaultFontSize: 13,
                        layout: {
                            padding: 0
                        },
                        legend: {
                            display: !1,
                            position: ""bottom"",
                            labels: {
                                usePointStyle: !0,
                                padding: 16
                            }
                        },
                        elements: {
                            point: {
                                radius: 0,");
            WriteLiteral(@"
                                backgroundColor: n.theme.primary
                            },
                            line: {
                                tension: .4,
                                borderWidth: 4,
                                borderColor: n.theme.primary,
                                backgroundColor: n.transparent,
                                borderCapStyle: ""rounded""
                            },
                            rectangle: {
                                backgroundColor: n.theme.warning
                            },
                            arc: {
                                backgroundColor: n.theme.primary,
                                borderColor: n.white,
                                borderWidth: 4
                            }
                        },
                        tooltips: {
                            enabled: !1,
                            mode: ""index"",
                            intersect: !1,
  ");
            WriteLiteral(@"                          custom: function (o) {
                                var a = $(""#chart-tooltip"");
                                if (a.length || (a = $('<div id=""chart-tooltip"" class=""popover bs-popover-top"" role=""tooltip""></div>'), $(""body"").append(a)), 0 !== o.opacity) {
                                    if (o.body) {
                                        var e = o.title || [],
                                            n = o.body.map(function (a) {
                                                return a.lines
                                            }),
                                            r = """";
                                        r += '<div class=""arrow""></div>', e.forEach(function (a) {
                                            r += '<h3 class=""popover-header text-center"">' + a + ""</h3>""
                                        }), n.forEach(function (a, e) {
                                            o.labelColors[e].backgroundColor;
                    ");
            WriteLiteral(@"                        var t = 1 < n.length ? ""justify-content-left"" : ""justify-content-center"";
                                            r += '<div class=""popover-body d-flex align-items-center ' + t + '""><span class=""badge badge-dot""><i class=""bg-primary""></i></span>' + a + ""</div>""
                                        }), a.html(r)
                                    }
                                    var t = $(this._chart.canvas),
                                        l = (t.outerWidth(), t.outerHeight(), t.offset().top),
                                        i = t.offset().left,
                                        s = a.outerWidth(),
                                        d = a.outerHeight(),
                                        c = l + o.caretY - d - 16,
                                        p = i + o.caretX - s / 2;
                                    a.css({
                                        top: c + ""px"",
                                        left: p + ""px");
            WriteLiteral(@""",
                                        display: ""block"",
                                        ""z-index"": ""100""
                                    })
                                } else a.css(""display"", ""none"")
                            },
                            callbacks: {
                                label: function (a, e) {
                                    var t = e.datasets[a.datasetIndex].label || """",
                                        o = a.yLabel,
                                        n = """";
                                    return 1 < e.datasets.length && (n += '<span class=""badge badge-primary mr-auto"">' + t + ""</span>""), n += '<span class=""popover-body-value"">' + o + ""</span>""
                                }
                            }
                        }
                    },
                    doughnut: {
                        cutoutPercentage: 83,
                        tooltips: {
                            callbacks: {
      ");
            WriteLiteral(@"                          title: function (a, e) {
                                    return e.labels[a[0].index]
                                },
                                label: function (a, e) {
                                    var t = """";
                                    return t += '<span class=""popover-body-value"">' + e.datasets[0].data[a.index] + ""</span>""
                                }
                            }
                        },
                        legendCallback: function (a) {
                            var o = a.data,
                                n = """";
                            return o.labels.forEach(function (a, e) {
                                var t = o.datasets[0].backgroundColor[e];
                                n += '<span class=""chart-legend-item"">', n += '<i class=""chart-legend-indicator"" style=""background-color: ' + t + '""></i>', n += a, n += ""</span>""
                            }), n
                        }
             ");
            WriteLiteral(@"       }
                }
            }, Chart.scaleService.updateScaleDefaults(""linear"", {
                gridLines: {
                    borderDash: [2],
                    borderDashOffset: [2],
                    color: n.gray[300],
                    drawBorder: !1,
                    drawTicks: !1,
                    lineWidth: 0,
                    zeroLineWidth: 0,
                    zeroLineColor: n.gray[300],
                    zeroLineBorderDash: [2],
                    zeroLineBorderDashOffset: [2]
                },
                ticks: {
                    beginAtZero: !0,
                    padding: 10,
                    callback: function (a) {
                        if (!(a % 10)) return a
                    }
                }
            }), Chart.scaleService.updateScaleDefaults(""category"", {
                gridLines: {
                    drawBorder: !1,
                    drawOnChartArea: !1,
                    drawTicks: !1
             ");
            WriteLiteral(@"   },
                ticks: {
                    padding: 20
                },
                maxBarThickness: 10
            }), a)), e.on({
                change: function () {
                    var a = $(this);
                    a.is(""[data-add]"") && l(a)
                },
                click: function () {
                    var a = $(this);
                    a.is(""[data-update]"") && i(a)
                }
            }), {
                colors: n,
                fonts: o,
                mode: t
            }
        }(),
        OrdersChart = function () {
            var a, e, t = $(""#chart-orders"");
            $('[name=""ordersSelect""]');
            t.length && (a = t, e = new Chart(a, {
                type: ""bar"",
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                callback: function (a) {
                                    if (!(a % 10)) retur");
            WriteLiteral(@"n a
                                }
                            }
                        }]
                    },
                    tooltips: {
                        callbacks: {
                            label: function (a, e) {
                                var t = e.datasets[a.datasetIndex].label || """",
                                    o = a.yLabel,
                                    n = """";
                                return 1 < e.datasets.length && (n += '<span class=""popover-body-label mr-auto"">' + t + ""</span>""), n += '<span class=""popover-body-value"">' + o + ""</span>""
                            }
                        }
                    }
                },
                data: {
                    labels: JSON.parse('");
            EndContext();
            BeginContext(30755, 42, false);
#line 744 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                   Write(Html.Raw(Json.Serialize(Model.OrderLabel)));

#line default
#line hidden
            EndContext();
            BeginContext(30797, 122, true);
            WriteLiteral("\'),\r\n                    datasets: [{\r\n                        label: \"Order\",\r\n                        data: JSON.parse(\'");
            EndContext();
            BeginContext(30920, 37, false);
#line 747 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                     Write(Html.Raw(Json.Serialize(Model.Order)));

#line default
#line hidden
            EndContext();
            BeginContext(30957, 1746, true);
            WriteLiteral(@"')
                    }]
                }
            }), a.data(""chart"", e))
        }(),
        SalesChart = function () {
            var a, e, t = $(""#chart-sales"");
            t.length && (a = t, e = new Chart(a, {
                type: ""line"",
                options: {
                    scales: {
                        yAxes: [{
                            gridLines: {
                                color: Charts.colors.gray[900],
                                zeroLineColor: Charts.colors.gray[900]
                            },
                            ticks: {
                                callback: function (a) {
                                    if (!(a % 10)) return ""P"" + a + """"
                                }
                            }
                        }]
                    },
                    tooltips: {
                        callbacks: {
                            label: function (a, e) {
                                var t = e.dat");
            WriteLiteral(@"asets[a.datasetIndex].label || """",
                                    o = a.yLabel,
                                    n = """";
                                return 1 < e.datasets.length && (n += '<span class=""popover-body-label mr-auto"">' + t + ""</span>""), n += '<span class=""popover-body-value"">P' + o + ""</span>""
                            }
                        }
                    }
                },
                data: {
                    labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""],
                    datasets: [
                        {
                            label: ""Performance"",
                            data:  JSON.parse('");
            EndContext();
            BeginContext(32704, 37, false);
#line 786 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                          Write(Html.Raw(Json.Serialize(Model.Sales)));

#line default
#line hidden
            EndContext();
            BeginContext(32741, 234, true);
            WriteLiteral("\')\r\n                        }\r\n\r\n                    ]\r\n                }\r\n            }), a.data(\"chart\", e))\r\n        }();\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\nvar chartdata = {\r\n   \r\n        type: \'bar\',\r\n        data: {\r\n          labels: JSON.parse(\'");
            EndContext();
            BeginContext(32976, 42, false);
#line 804 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                         Write(Html.Raw(Json.Serialize(Model.OrderLabel)));

#line default
#line hidden
            EndContext();
            BeginContext(33018, 179, true);
            WriteLiteral("\'),\r\n          // labels: month,\r\n          datasets: [\r\n            {\r\n              label: \'Orders\',\r\n              backgroundColor: \'#26B99A\',\r\n              data: JSON.parse(\'");
            EndContext();
            BeginContext(33198, 37, false);
#line 810 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                           Write(Html.Raw(Json.Serialize(Model.Order)));

#line default
#line hidden
            EndContext();
            BeginContext(33235, 459, true);
            WriteLiteral(@"')
            }
          ]
        }
    
    };




var ctx = document.getElementById('chart-new-order').getContext('2d');
    new Chart(ctx, chartdata);




    var rateChart = {
   
        type: 'bar',
        data: {
          labels: [""1+"",""2+"",""3+"",""4+"",""5+""],
          // labels: month,
          datasets: [
            {
              label: 'Orders',
              backgroundColor: '#F7CA18',
                  data: ['");
            EndContext();
            BeginContext(33695, 33, false);
#line 836 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                     Write(Html.Raw(Model.RatingModel.Rate1));

#line default
#line hidden
            EndContext();
            BeginContext(33728, 3, true);
            WriteLiteral("\',\'");
            EndContext();
            BeginContext(33732, 33, false);
#line 836 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                          Write(Html.Raw(Model.RatingModel.Rate2));

#line default
#line hidden
            EndContext();
            BeginContext(33765, 3, true);
            WriteLiteral("\',\'");
            EndContext();
            BeginContext(33769, 33, false);
#line 836 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                                                               Write(Html.Raw(Model.RatingModel.Rate3));

#line default
#line hidden
            EndContext();
            BeginContext(33802, 3, true);
            WriteLiteral("\',\'");
            EndContext();
            BeginContext(33806, 33, false);
#line 836 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                                                                                                    Write(Html.Raw(Model.RatingModel.Rate4));

#line default
#line hidden
            EndContext();
            BeginContext(33839, 3, true);
            WriteLiteral("\',\'");
            EndContext();
            BeginContext(33843, 33, false);
#line 836 "C:\Users\Adrian Radores\Desktop\messenger2\Messenger_Thesis_1._0\Views\Admin\Index.cshtml"
                                                                                                                                                                         Write(Html.Raw(Model.RatingModel.Rate5));

#line default
#line hidden
            EndContext();
            BeginContext(33876, 190, true);
            WriteLiteral("\'] \r\n            }\r\n          ]\r\n        }\r\n    \r\n    };\r\n\r\n\r\n\r\n\r\nvar rate = document.getElementById(\'chart-rate\').getContext(\'2d\');\r\n    new Chart(rate, rateChart);\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IUserRepository UserRepository { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DashboardViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
